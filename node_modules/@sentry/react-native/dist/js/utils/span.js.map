{"version":3,"file":"span.js","sourceRoot":"","sources":["../../../src/js/utils/span.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAEvD;;GAEG;AACH,MAAM,UAAU,YAAY,CAAC,IAAU;IACrC,OAAO,IAAI,YAAY,UAAU,CAAC;AACpC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,UAAU,CAAC,IAAU;IACnC,OAAO,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC;AAED,MAAM,oBAAoB,GAAG,UAAU,CAAC;AACxC,MAAM,iCAAiC,GAAG,2BAA2B,CAAC;AAOtE;;GAEG;AACH,MAAM,UAAU,eAAe,CAAC,IAAU,EAAE,YAAoB;IAC7D,IAAwB,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;AACvD,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,wBAAwB,CAAC,IAAU;;IACjD,OAAO,MAAA,MAAC,IAAwB,EAAC,2BAA2B,CAAC,kDAAI,CAAC;AACpE,CAAC","sourcesContent":["import type { Span, TransactionEvent } from '@sentry/core';\nimport { getRootSpan, SentrySpan } from '@sentry/core';\n\n/**\n *\n */\nexport function isSentrySpan(span: Span): span is SentrySpan {\n  return span instanceof SentrySpan;\n}\n\n/**\n *\n */\nexport function isRootSpan(span: Span): boolean {\n  return span === getRootSpan(span);\n}\n\nconst END_TIME_SCOPE_FIELD = '_endTime';\nconst CONVERT_SPAN_TO_TRANSACTION_FIELD = '_convertSpanToTransaction';\n\ntype SpanWithPrivate = Span & {\n  [END_TIME_SCOPE_FIELD]?: number;\n  [CONVERT_SPAN_TO_TRANSACTION_FIELD]?: () => TransactionEvent | undefined;\n};\n\n/**\n *\n */\nexport function setEndTimeValue(span: Span, endTimestamp: number): void {\n  (span as SpanWithPrivate)['_endTime'] = endTimestamp;\n}\n\n/**\n *\n */\nexport function convertSpanToTransaction(span: Span): TransactionEvent | undefined {\n  return (span as SpanWithPrivate)['_convertSpanToTransaction']?.();\n}\n"]}