{"version":3,"file":"metroBabelTransformer.js","sourceRoot":"","sources":["../../../../../src/js/tools/vendor/metro/metroBabelTransformer.ts"],"names":[],"mappings":"AAAA,2CAA2C","sourcesContent":["// Vendored / modified from @facebook/metro\n\n// https://github.com/facebook/metro/blob/9b295e5f7ecd9cb6332a199bf9cdc1bd8fddf6d9/packages/metro-babel-transformer/types/index.d.ts\n\n// MIT License\n\n// Copyright (c) Meta Platforms, Inc. and affiliates.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nexport interface CustomTransformOptions {\n  [key: string]: unknown;\n}\n\nexport type TransformProfile = 'default' | 'hermes-stable' | 'hermes-canary';\n\nexport interface BabelTransformerOptions {\n  readonly customTransformOptions?: CustomTransformOptions;\n  readonly dev: boolean;\n  readonly enableBabelRCLookup?: boolean;\n  readonly enableBabelRuntime: boolean | string;\n  readonly extendsBabelConfigPath?: string;\n  readonly experimentalImportSupport?: boolean;\n  readonly hermesParser?: boolean;\n  readonly hot: boolean;\n  readonly minify: boolean;\n  readonly unstable_disableES6Transforms?: boolean;\n  readonly platform: string | null;\n  readonly projectRoot: string;\n  readonly publicPath: string;\n  readonly unstable_transformProfile?: TransformProfile;\n  readonly globalPrefix: string;\n}\n\nexport interface BabelTransformerArgs {\n  readonly filename: string;\n  readonly options: BabelTransformerOptions;\n  readonly plugins?: unknown;\n  readonly src: string;\n}\n\nexport interface BabelTransformer {\n  transform: (args: BabelTransformerArgs) => {\n    ast: unknown;\n    metadata: unknown;\n  };\n  getCacheKey?: () => string;\n}\n"]}